% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.rankprob.R
\name{predict.rankprob}
\alias{predict.rankprob}
\title{Generate predictions from a \code{rankprob} object}
\usage{
\method{predict}{rankprob}(object, newdata = NULL, type = "rank_probs", rankings = NULL, ...)
}
\arguments{
\item{object}{a \code{rankprob} object; the output of a call to \code{\link[=convert_rankprob]{convert_rankprob()}}.}

\item{newdata}{the new data used to compute predictions. If \code{NULL}, the original data used to fit the model will be used.}

\item{type}{the type of prediction desired. If \code{"rank_probs"}, the probability of the ranking identified in \code{rankings} will be computed. Otherwise passed the \code{predict()} method for the original model fit. Note \code{"rank_probs"} cannot be abbreviated, but as the default, it also doesn't need to be specified.}

\item{rankings}{when \code{type = "rank_probs"}, a list of character vectors that identify the rankings for which predicted probabilities are to be computed. Can also be a single character vector for a single ranking. If \code{NULL}, will compute the ranking of the outcome levels in their original order. Each ranking must contain all levels of the original outcome.}

\item{\dots}{further arguments pass to \code{predict()} when \code{type} is not \code{"rank_probs"}.}
}
\value{
A matrix with a row for each unit and a column for each ranking, with each cell equal to the predicted probability of that ranking being chosen for that unit.
}
\description{
\code{predict()} computes predictions from a \code{rankprob} object, which is a multinomial regression object processed by \code{\link[=convert_rankprob]{convert_rankprob()}}.
}
\details{
\code{predict()} produces the predicted probability of each supplied ranking when \code{type = "rank_probs"}. For each ranking \eqn{r = \{y_1, y_2, ..., y_p\}}, the predicted probability of the ranking is equal to
\deqn{
p^r = \prod_{i = 1}^p {\frac{p_i}{\sum_{j = i} ^ p {p_j}}}
}
where \eqn{p_i = P(Y = y_i|X)}.
}
\note{
When using \code{marginaleffects} functions, \code{type = "rank_probs"} must be specified for the functions to work correctly. You may see a warning beginning with something like "These arguments are not known to be supported for models of class \code{rankprob}: rankings." This can be ignored.
}
\examples{
\dontshow{if (requireNamespace("nnet", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

data <- data.frame(x1 = rnorm(500),
                   x2 = rnorm(500),
                   x3 = rnorm(500),
                   y = sample(LETTERS[1:4], 500, TRUE))

fit <- nnet::multinom(y ~ x1 + x2 + x3, data = data, Hess = TRUE)

fit <- convert_rankprob(fit)

p <- predict(fit, rankings = list(c("A", "B", "C", "D"),
                                  c("A", "C", "B", "D"),
                                  c("B", "A", "D", "C")))

head(p)
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=convert_rankprob]{convert_rankprob()}}
}
